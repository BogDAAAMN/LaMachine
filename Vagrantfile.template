# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

Vagrant.require_version ">= 1.7.0"

current_dir = File.dirname(File.expand_path(__FILE__))
lamachine_config = YAML.load_file("#{current_dir}/host_vars/HOSTNAME.yml")

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = lamachine_config['vagrant_box']
  config.vm.define "lamachine-vm"


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  config.vm.hostname = lamachine_config['hostname']

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: lamachine_config['http_port'], host: lamachine_config['mapped_http_port'] #clam services and main landing page (nginx)
  #config.vm.network "forwarded_port", guest: 8081, host: 8081 #flat (nginx)
  #config.vm.network "forwarded_port", guest: 8888, host: 8888 #reserved for user defined applications such as jypiter notebooks
  #config.vm.network "forwarded_port", guest: 3030, host: 3030 #foliadocserve

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder lamachine_config["host_data_path"], lamachine_config["data_path"]

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
     # Customize the amount of memory on the VM:
     vb.name = lamachine_config['hostname']
     vb.memory = lamachine_config['vm_memory'] #you will want to increase the memory limit for many applications!!
     vb.cpus = lamachine_config['vm_cpus']
     vb.customize ["modifyvm", :id, "--nictype1", "Am79C973"]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # This plugin needs to be installed: vagrant plugin install vagrant-vbguest
  #
  # set auto_update to false, if you do NOT want to check the correct
  # additions version when booting this machine
  #config.vbguest.auto_update = true

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "ansible" do |ansible|
    #ansible.verbose = "v"
    ansible.playbook = "install.yml"
    ansible.extra_vars = {
        ansible_python_interpreter: lamachine_config["ansible_python_interpreter"],
    }
  end
end
