---

    - name: "{% if 'debian' in package %}{{package.debian}}{% else %}(NOT APPLICABLE){% endif %} - Installing global dependency (Debian/Ubuntu)"
      become: true
      become_user: root
      apt:
        name: "{{package.debian}}"
        state: present
      when: root and "debian" in package and (ansible_distribution|lower == "debian" or ansible_distribution|lower == "ubuntu" or  ansible_distribution|lower == "linux mint")
      ignore_errors: "{% if 'ignore_errors' in package %}{{ package.ignore_errors }}{% else %}False{% endif %}"

    - name: "{% if 'debian' in package %}{{package.debian}}{% else %}(NOT APPLICABLE){% endif %} - Registering package metadata (Debian/Ubuntu)"
      shell: |
        #!/bin/bash
        apt show {{package.debian}} | {{lm_prefix}}/bin/codemetapy --with-entrypoints -i apt - > {{lm_prefix}}/var/metadata/{{item|lower}}.json
      args:
        executable: /bin/bash
      environment: "{{lm_env}}"
      when: "'debian' in package and (ansible_distribution|lower == 'debian' or ansible_distribution|lower == 'ubuntu' or  ansible_distribution|lower == 'linux mint')"
      ignore_errors: "{% if 'ignore_errors' in package %}{{ package.ignore_errors }}{% else %}False{% endif %}"

    - name: "{% if 'redhat' in package %}{{package.redhat}}{% else %}(NOT APPLICABLE){% endif %} - Installing global dependency (RedHat)"
      become: true
      become_user: root
      yum:
        name: "{{package.redhat}}"
        state: present
      when: root and "redhat" in package and (ansible_distribution|lower == "redhat" or ansible_distribution|lower == "centos" or  ansible_distribution|lower == "fedora" or ansible_distribution|lower == "rhel")
      ignore_errors: "{% if 'ignore_errors' in package %}{{ package.ignore_errors }}{% else %}False{% endif %}"

    - name: "{% if 'arch' in package %}{{package.arch}}{% else %}(NOT APPLICABLE){% endif %} - Installing global dependency (Arch)"
      become: true
      become_user: root
      pacman:
        name: "{{package.arch}}"
        state: present
      when: root and "arch" in package and (ansible_distribution|lower == "archlinux")
      ignore_errors: "{% if 'ignore_errors' in package %}{{ package.ignore_errors }}{% else %}False{% endif %}"

    - name: "{% if 'homebrew' in package %}{{package.homebrew}}{% else %}(NOT APPLICABLE){% endif %} - Installing global dependency (Mac OS X/Homebrew)"
      homebrew:
        name: "{{package.homebrew}}"
        state: present
      when: '"homebrew" in package and (ansible_distribution|lower == "macosx")'
      ignore_errors: "{% if 'ignore_errors' in package %}{{ package.ignore_errors }}{% else %}False{% endif %}"
