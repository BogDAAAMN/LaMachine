---
- when: locality == "global" and root
  block:
      - name: "Installing Python packages globally (1) (Debian/Ubuntu)"
        apt:
            name: "{{item}}"
            state: latest
        with_items:
            - cython3
            - python3-numpy
            - python3-scipy
            - python3-flask
            - ipython3
            - python3-lxml
            - python3-matplotlib
            - python3-pandas
            - python3-crypto
            - python3-yaml
            - python3-requests
            - python3-requests-oauthlib
            - python3-pycurl
            - python3-sphinx
            - python3-pymongo
            - python3-nltk
            - python3-pil
        when: ansible_distribution|lower == "debian" or ansible_distribution|lower == "ubuntu" or ansible_distribution|lower == "linuxmint"
      - name: "Installing Python packages globally (2) (Debian/Ubuntu)" #this includes packages that may be missing from older distributions
        apt:
            name: "{{item}}"
            state: latest
        with_items:
            - python3-seaborn
            - python3-keras
            - python3-sklearn
            - python3-sklearn-pandas
            - python3-mysqldb
        when: (ansible_distribution|lower == "debian" and ansible_distribution_version >= 9) or (ansible_distribution|lower == "ubuntu" and ansible_distribution_version >= 16.04) or ansible_distribution|lower == "linuxmint"
        #TODO: other distributions
      - name: "Installing Python Notebook globally (Debian)"
        apt:
            name: "{{item}}"
            state: latest
        with_items:
            - python3-notebook
        when: (ansible_distribution|lower == "debian" and ansible_distribution_version >= 9)
      - name: "Installing Python Notebook globally (Ubuntu)"
        apt:
            name: "{{item}}"
            state: latest
        with_items:
            - ipython3-notebook
        when: ansible_distribution|lower == "ubuntu" or ansible_distribution|lower == "linuxmint"


- when: locality == "local"
  block:
     - name: "Installing generic 3rd party Python Packages via conda"
       shell: "{{local_prefix}}/bin/conda install -mqy -p {{local_prefix}} beautifulsoup4 cython flask ipython jupyter lxml matplotlib nbconvert nltk numpy pandas pycrypto pylint pymongo pymysql requests scikit-learn scipy seaborn spacy sphinx tensorflow word2vec xlsxwriter yaml gensim pillow keras"
       when: localenv_type == "conda"
       register: condainstall
       changed_when: '"All requested packages already installed" not in condainstall.stdout'
     - name: "Making sure all conda packages are up to date"
       shell: "{{local_prefix}}/bin/conda update -mqy -p {{local_prefix}} --all"
       when: localenv_type == "conda"
     - name: "Installing generic 3rd party Python Packages via pip"
       pip:
           name: "{{item}}"
           state: latest
           virtualenv: "{{ local_prefix }}"
       with_items: #more or less in dependency order
           - cython
           - lxml
           - pyyaml
           - numpy
           - scipy
           - matplotlib
           - scikit-learn
           - beautifulsoup4
           - flask
           - pandas
           - ipython
           - jupyter
           - nbconvert
           - nltk
           - pycrypto
           - pylint
           - pymongo
           - pymysql
           - requests
           - seaborn
           - spacy
           - sphinx
           - tensorflow
           - word2vec
           - xlsxwriter
           - gensim
           - pillow
           - keras
       when: localenv_type == "virtualenv"
