---
#- when: locality == "global" and root
#  block:
#      - name: "Installing major Python packages globally (1) (Debian/Ubuntu)"
#        become: yes
#        become_user: root
#        apt:
#            name: "{{item}}"
#            state: latest
#       with_items:
#            - cython3
#            - python3-numpy
#            - python3-scipy
#            - python3-crypto
#            - python3-yaml
#            - python3-requests
#            - python3-requests-oauthlib
#            - python3-nltk
#            - python3-pil
#        when: ansible_distribution|lower == "debian" or ansible_distribution|lower == "ubuntu" or ansible_distribution|lower == "linuxmint"
#      - name: "Installing major Python packages globally (2) (Debian/Ubuntu)" #this includes packages that may be missing from older distributions
#        become: yes
#        become_user: root
#        apt:
#            name: "{{item}}"
#            state: latest
#        with_items:
#            - python3-mysqldb
#        when: (ansible_distribution|lower == "debian" and ansible_distribution_version >= 9) or (ansible_distribution|lower == "ubuntu" and ansible_distribution_version >= 16.04) or ansible_distribution|lower == "linuxmint"


 - name: "Finding global pip3"
   shell: which pip3
   register: pip
   when: locality == "global"

 - name: "Installing generic 3rd party Python Packages via pip"
   become: "{% if root and locality == \"global\" %}yes{% else %}no{% endif %}"
   become_user: root
   pip:
       name: "{{item}}"
       state: latest
       executable: "{% if locality == \"local\" %}{{ local_prefix }}/bin/pip{% else %}{{pip.stdout}}{% endif %}"
   with_items: #more or less in dependency order
       - cython
       - lxml
       - pyyaml
       - numpy
       - scipy
       - matplotlib
       - scikit-learn
       - beautifulsoup4
       - flask
       - pandas
       - ipython
       - jupyter
       - nbconvert
       - nltk
       - pycrypto
       - pylint
       - pymongo
       - pymysql
       - requests
       - seaborn
       - spacy
       - sphinx
       - tensorflow
       - word2vec
       - xlsxwriter
       - gensim
       - pillow
       - keras
   when: localenv_type != "conda"

#############################################################
#currently experimental/unused conda related stuff:
#
 - when: locality == "local"
   block:
     - name: "Installing generic 3rd party Python Packages via conda"
       shell: "{{local_prefix}}/bin/conda install -mqy -p {{local_prefix}} beautifulsoup4 cython flask ipython jupyter lxml matplotlib nbconvert nltk numpy pandas pycrypto pylint pymongo pymysql requests scikit-learn scipy seaborn spacy sphinx tensorflow word2vec xlsxwriter yaml gensim pillow keras"
       when: localenv_type == "conda"
       register: condainstall
       changed_when: '"All requested packages already installed" not in condainstall.stdout'
     - name: "Making sure all conda packages are up to date"
       shell: "{{local_prefix}}/bin/conda update -mqy -p {{local_prefix}} --all"
       when: localenv_type == "conda"
