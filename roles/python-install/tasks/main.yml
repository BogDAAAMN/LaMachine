---
- when: "'exclude_when' not in package or not package.exclude_when"
  block:
    - name: "{{package.github_repo}} - Installing latest version from github (development)"
      block:
        - name: "{{package.github_repo}} - Check if repository exists"
          stat:
            path: "{{ source_path }}/{{ package.github_repo }}"
          register: repo_path
        - name: "{{package.github_repo}} - Git clone"
          shell: "git clone https://github.com/{{package.github_user}}/{{package.github_repo}}"
          args:
            chdir: "{{ source_path }}"
          when: not repo_path.stat.exists
        - name: "{{package.github_repo}} - Checkout latest master version of (development)"
          shell: "git checkout master && git pull"
          args:
            chdir: "{{ source_path }}/{{package.github_repo}}"
        - name: "{{package.github_repo}} - Installing python package"
          become: "{% if locality == 'global' %}yes{% else %}no{% endif %}"
          become_user: root
          shell: "python {% if 'setup' in package %}{{package.setup}}{% else %}setup.py{% endif %} install"
          args:
            chdir: "{{ source_path }}/{{package.github_repo}}"
      environment: "{% if locality == \"local\" %}{{localenv}}{% else %}{{globalenv}}{% endif %}"
      when: package.github_user != "" and package.github_repo != "" and (version == "development" or (package.pip == "" and package.conda == ""))


    - name: "{{package.pip}} - Installing latest release from the Python Package Index (stable, virtualenv)"
      become: "{% if locality == 'global' %}yes{% else %}no{% endif %}"
      become_user: root
      pip:
           name: "{{package.pip}}"
           state: latest
           executable: "{% if locality == \"local\" %}{{ local_prefix }}/bin/pip{% else %}{{pip.stdout}}{% endif %}"
      environment: "{% if locality == \"local\" %}{{localenv}}{% else %}{{globalenv}}{% endif %}"
      when: (version == "stable" or (version == "development" and package.github_user == "")) and localenv_type != "conda" and package.pip != ""

    - name: "{{package.conda}} - Installing latest release from conda (stable)"
      command: "{{local_prefix}}/bin/conda install -mqy -p {{local_prefix}} {{package.conda}}"
      environment: "{% if locality == \"local\" %}{{localenv}}{% else %}{{globalenv}}{% endif %}"
      when: (version == "stable" or (version == "development" and package.github_user == "")) and localenv_type == "conda" and package.conda != ""

    - name: "{{package.pip}} - Installing latest release from the Python Package Index (stable, conda)"
      pip:
           name: "{{package.pip}}"
           state: latest
           executable: "{% if locality == \"local\" %}{{ local_prefix }}/bin/pip{% else %}{{pip.stdout}}{% endif %}"
      environment: "{% if locality == \"local\" %}{{localenv}}{% else %}{{globalenv}}{% endif %}"
      when: (version == "stable" or (version == "development" and package.github_user == "")) and localenv_type == "conda" and package.conda == "" and package.pip != ""
