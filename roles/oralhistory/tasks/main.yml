---

    - name: Install CLAM #so we don't need to rely on languagemachines-basic nor python-core
      include_role:
        name: lamachine-python-install
      with_items:
          - { pip: "flask" }
          - { pip: "lxml" }
          - { pip: "requests" }
          - { pip: "requests_oauthlib" }
          - { pip: "requests_toolbelt" }
          - { pip: "pycrypto" }
          - { pip: "certifi" }
          - { pip: "pyyaml" }
          - { pip: "numpy" }
          - { github_user: "proycon", github_repo: "clam", pip: "clam" }
      loop_control:
           loop_var: package

    - name: Installing webservice
      include_role:
        name: lamachine-python-install
      vars:
        package:
           github_user: "schemreier"
           github_repo: "oralhistory"
           metadata:
              identifier: "oralhistory"

    - name: Link Python package installation in opt/
      become: "{{lm_become}}"
      become_user: root
      shell: |
        export DIR=$(python3 -c "import {{item}}; print({{item}}.__path__[0])")
        if [ ! -e "$DIR" ]; then
            echo "Unable to find dir"
            exit 2
        fi
        if [ -e "{{lm_prefix}}/opt/{{item}}" ]; then
          rm "{{lm_prefix}}/opt/{{item}}"
        fi
        ln -sf $DIR {{lm_prefix}}/opt/{{item}}
      with_items:
        - clam
        - oralhistory
      environment: "{{lm_env}}"


    - name: "Install webserver configuration for oral history"
      become: "{{lm_become}}"
      become_user: root
      template:
        src: "nginx/oralhistory.conf"
        dest: "{{lm_prefix}}/etc/nginx/conf.d/oralhistory.conf"
        force: yes
        backup: yes
        owner: "{{unix_user}}"
      when: webservertype == "nginx"

    - name: "Install uwsgi configuration for oral history"
      become: "{{lm_become}}"
      become_user: root
      template:
        src: "uwsgi/oralhistory.ini"
        dest: "{{lm_prefix}}/etc/uwsgi-emperor/vassals/oralhistory.ini"
        force: yes
        backup: yes
        owner: "{{web_user}}"
        group: "{{web_group}}"

    - name: "Install clam configuration for oral history"
      become: "{{lm_become}}"
      become_user: root
      template:
        src: "clam/oralhistory.config.yml"
        dest: "{{lm_prefix}}/etc/oralhistory.config.yml"
        force: yes
        backup: yes
        owner: "{{unix_user}}"

    - name: Register webservice metadata
      include_role:
          name: lamachine-register
      vars:
          update: "{{item}}"
          metadata: #add entrypoint metadata to registry
              identifier: "{{item}}"
              entryPoints:
                - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "WUI", mediatorApplication: "#clam" }
                - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "REST", specification: "{{lm_base_url}}/{{item}}/info",  mediatorApplication: "#clam" }
      when: '"all" in services or item in services'
      with_items:
        - oralhistory


