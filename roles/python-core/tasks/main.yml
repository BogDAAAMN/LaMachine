---
 - when: locality == "global" and root and prefer_distro is defined and prefer_distro
   block:
       - name: "Installing Python packages from distribution instead of pip if preferred (Debian/Ubuntu)"
         become: yes
         become_user: root
         apt:
             name: "{{item}}"
             state: latest
         with_items:
             - cython3
             - python3-numpy
             - python3-scipy
             - python3-matplotlib
             - python3-crypto
             - python3-yaml
             - python3-requests
             - python3-requests-oauthlib
             - python3-flask
             - python3-cherrypy3
             - python3-jinja2
         when: ansible_distribution|lower == "debian" or ansible_distribution|lower == "ubuntu" or ansible_distribution|lower == "linux mint"


 - when: localenv_type == "virtualenv"
   block:
     - name: "Installing generic 3rd party Python Packages via pip (1)"
       include_role:
           name: lamachine-python-install
       with_items: #more or less in dependency order
         - { "pip": cython, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": lxml, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": pyyaml, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": numpy, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": matplotlib, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": requests, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": flask, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": cherrypy, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": jinja2, "state": "{% if prefer_distro or version == "custom" %}present{% else %}latest{% endif %}" }
         - { "pip": django, "version": "{% if python_version.stdout <= '3.4' %}2.0.5{% endif %}", "exclude_when": "{% if webserver %}false{% else %}true{% endif %}" } #django >=2.1 does not support python 3.4, stick to latest 2.0 release in that case
       loop_control:
           loop_var: package
     - name: "Installing generic 3rd party Python Packages via pip (2)"
       include_role:
          name: lamachine-python-install
       with_items: #more or less in dependency order
         - { "pip": scipy }
         - { "pip": scikit-learn }
         - { "pip": beautifulsoup4 }
         - { "pip": pandas }
         - { "pip": ipython }
         - { "pip": jupyter }
         - { "pip": nbconvert }
         - { "pip": nltk }
         - { "pip": pycrypto }
         - { "pip": pylint }
         - { "pip": pymongo }
         - { "pip": pymysql }
         - { "pip": seaborn }
         - { "pip": sphinx }
         - { "pip": word2vec }
         - { "pip": xlsxwriter }
         - { "pip": gensim }
         - { "pip": pillow }
         - { "pip": keras }
         - { "pip": fasttext }
         - { "pip": xgboost, "exclude_when": "{% if ansible_distribution|lower == 'macosx' %}true{% else %}false{% endif %}" }
         - { "pip": tqdm }
         - { "pip": networkx }
         - { "pip": uwsgi, "exclude_when": "{% if webserver and not (root and locality=='global' and (ansible_distribution|lower == 'debian' or ansible_distribution|lower == 'ubuntu' or ansible_distribution|lower == 'linux mint')) %}false{% else %}true{% endif %}" } #uwsgi will already be installed globally if on debian/ubuntu in global mode
       loop_control:
           loop_var: package
       when: minimal is not defined or not minimal
