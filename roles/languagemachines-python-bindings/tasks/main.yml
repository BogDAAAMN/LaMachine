---

    - name: Installing boost-python for anaconda
      command: "{{local_prefix}}/bin/conda install -mqy -p {{local_prefix}} -c meznom boost-python"
      when: localenv_type == "conda" and locality == "local"

      #command: "{{local_prefix}}/bin/conda install -mqy -p {{local_prefix}} -c anaconda boost" #This installs all of boost, but also pulls in icu4c and causes conflicts with the homebrew version

    - name: Installing Python bindings
      include_role:
        name: python-install
      with_items:
          - { github_user: "proycon", github_repo: "python-timbl", pip: "python3-timbl", conda: "", setup: "setup3.py" }
          - { github_user: "proycon", github_repo: "python-ucto", pip: "python-ucto", conda: "" }
          - { github_user: "proycon", github_repo: "python-frog", pip: "python-frog", conda: "" }
      loop_control:
          loop_var: package


    - name: Triggering manual mode for Colibri Core #otherwise setup.py will attempt to recompile c++ sources (and fail on a permission issue)
      file:
        path: "{{source_path}}/colibri-core/manual"
        state: touch
      changed_when: False

    - name: Installing Colibri Core Python Binding
      include_role:
          name: python-install
      with_items:
          - { github_user: "proycon", github_repo: "colibri-core", pip: "", conda: "" } #always installed from source, will reuse same sourcedir as C++ lib
      loop_control:
          loop_var: package

    - name: Testing Python bindings
      include_role:
          name: lamachine_run
      vars:
          command: "python3 -c 'import {{ item }}'"
      with_items:
          - ucto
          - timbl
          - frog
          - colibricore
      register: test
      changed_when: test.rc != 0

