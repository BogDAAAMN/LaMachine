---

    - name: Installing boost for anaconda
      command: "{{local_prefix}}/bin/conda install -mqy -p {{local_prefix}} -c anaconda boost"
      when: localenv_type == "conda" and not prefer_global

    - name: Installing Python bindings
      include_role:
        name: python-install
      vars:
        github_user: "{{item.github_user}}"
        github_repo: "{{item.github_repo}}"
        pip_package: "{{item.pip_package}}"
        conda_package: "{{item.conda_package}}"
      with_items:
          - { github_user: "proycon", github_repo: "python-timbl", pip_package: "python3-timbl", conda_package: ""}
          - { github_user: "proycon", github_repo: "python-ucto", pip_package: "python-ucto", conda_package: ""}
          - { github_user: "proycon", github_repo: "python-frog", pip_package: "python-frog", conda_package: ""}

    - name: Installing Colibri Core Python Binding
      shell:|
          if [ {{prefer_global|int}} -ne 1 ]; then
              source {{homedir}}/bin/lamachine-{{ conf_name }}.activate
          fi
          {{local_prefix}}/python setup.py install --prefix={{local_prefix}}
      args:
          chdir: "{{source_path}}/colibri-core" #always installed from source

    - name: Testing Python bindings
      shell: |
          if [ {{prefer_global|int}} -ne 1 ]; then
              source {{homedir}}/bin/lamachine-{{ conf_name }}.activate
          fi
          hash -r  #clear cache
          echo "PATH=$PATH">&2
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH">&2
          echo "VIRTUAL_ENV=$VIRTUAL_ENV">&2
          echo "PYTHONPATH=$PYTHONPATH">&2
          which python || true >&2
          python -c "import {{ item }}"
      args:
          executable: /bin/bash
      with_items:
      with_items:
          - ucto
          - timbl
          - frog
          - colibricore
