---
  - when: webserver is defined and webserver == true
    block:
      - name: Obtaining Labirinto
        include_role:
          name: lamachine-git
        vars:
          package:
            user: proycon
            repo: labirinto
          metadata: #TODO: this is temporary until codemetapy can parse npm metadata itself!!!!
            identifier: labirinto
            name: Labirinto
            version: 0.1.2
            description: "Labirinto is a virtual laboratory portal, it makes a collection of software browseable and searchable for the end-user. Labirinto presents the software's metadata following the CodeMeta (https://codemeta.github.io) specification in an intuitive way and allows the user to filter and perform a limited search.  The portal gives access to software if it offers web-based interfaces."
            author: "Maarten van Gompel"
            url: "https://github.com/proycon/labirinto"
            codeRepository: "https://github.com/proycon/labirinto"
            issueTracker: "https://github.com/proycon/labirinto/issues"
            license: "AGPL-3.0-or-later"
            keywords: ["portal","codemeta","metadata"]

      - name: Installing Labirinto dependencies
        include_role:
          name: lamachine-run
        vars:
          command: npm install
          chdir: "{{ source_path }}/labirinto"

      - name: Install webserver configuration
        become: "{{lm_become}}"
        become_user: root
        template:
          src: "nginx/labirinto.conf"
          dest: "{{lm_prefix}}/etc/nginx/conf.d/labirinto.conf"
          force: yes
          owner: "{{unix_user}}"
          group: "{{unix_group}}"
        when: webservertype == "nginx"

      - name: Copying build files
        template:
          src: "{{item}}"
          dest: "{{ source_path }}/labirinto/config/{{item}}"
          force: yes
          owner: "{{unix_user}}"
          group: "{{unix_group}}"
        with_items:
          - "prod.env.js"
          - "index.js"

      - name: Building Labirinto
        include_role:
          name: lamachine-run
        vars:
          command: npm run build
          chdir: "{{ source_path }}/labirinto"

      - name: Deploying to document root
        become: "{{lm_become}}"
        become_user: root
        shell: "mkdir -p {{lm_prefix}}/var/www-data/docroot/portal && cp -r {{ source_path }}/labirinto/dist/* {{lm_prefix}}/var/www-data/docroot/portal/"
