---
    - name: "Installing Spacy"
      include_role:
          name: lamachine-python-install
      with_items:
          - { pip: spacy }
          - { pip: spacy2folia }
      loop_control:
           loop_var: package

    - name: "Checking whether spacy data is available"
      stat:
         path: "{{ lm_path }}/.spacydata"
      register: spacydata
      changed_when: False

    - when: not spacydata.stat.exists or force is defined
      block:
        - name: "Installing Spacy data locally (Listen carefully, I shall do this only once!)"
          include_role:
              name: lamachine-run
          vars:
              command: "python3 -m spacy download {{ item }}"
          with_items:
              - en
              - de
              - es
              - pt
              - fr
              - it
              - nl
              - xx
          when: locality != "global"

        - name: "Installing Spacy data globally  (Listen carefully, I shall do this only once!)"
          become: "{{lm_become}}"
          become_user: root
          command:
              cmd: "python3 -m spacy download {{ item }}"
          with_items:
              - en
              - de
              - es
              - pt
              - fr
              - it
              - nl
              - xx
          when: locality == "global"

        - name: "Marking spacy data as installed"
          copy:
            content: ""
            dest: "{{lm_path}}/.spacydata"

    - when: webserver is defined and webserver
      block:
          - name: Installing web service
            include_role:
              name: lamachine-web-install
            vars:
              service:
                nginx: spacy
                uwsgi: spacy
                #clam configuration was installed as part of clamservices

          - name: Register spaCy webservice
            include_role:
                name: lamachine-register
            vars:
                update: "{{item}}"
                metadata: #add entrypoint metadata to registry
                    identifier: "{{item}}"
                    entryPoints:
                      - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "WUI", mediatorApplication: "#clamservices" }
                      - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "REST", specification: "{{lm_base_url}}/{{item}}/info",  mediatorApplication: "#clamservices" }
            when: '"all" in services or item in services'
            with_items:
              - spacy




