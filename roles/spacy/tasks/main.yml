---
    - name: "Installing Spacy"
      include_role:
          name: lamachine-python-install
      with_items:
          - { pip: spacy }
          - { pip: spacy2folia }
      loop_control:
           loop_var: package

    - name: "Checking whether spacy data is available"
      stat:
         path: "{{ lm_path }}/.spacydata"
      register: spacydata
      changed_when: False

    - when: not spacydata.stat.exists or force is defined
      block:
        - name: "Installing Spacy data locally (Listen carefully, I shall do this only once!)"
          include_role:
              name: lamachine-run
          vars:
              command: "python3 -m spacy download {{ item }}"
          with_items:
              - en
              - de
              - es
              - pt
              - fr
              - it
              - nl
              - xx
          when: locality != "global"

        - name: "Installing Spacy data globally  (Listen carefully, I shall do this only once!)"
          become: "{{lm_become}}"
          become_user: root
          command:
              cmd: "python3 -m spacy download {{ item }}"
          with_items:
              - en
              - de
              - es
              - pt
              - fr
              - it
              - nl
              - xx
          when: locality == "global"

        - name: "Marking spacy data as installed"
          copy:
            content: ""
            dest: "{{lm_path}}/.spacydata"

    - when: webserver is defined and webserver
      block:
          - name: "Install webserver configuration for spacy"
            become: "{{lm_become}}"
            become_user: root
            template:
              src: "nginx/spacy.conf"
              dest: "{{lm_prefix}}/etc/nginx/conf.d/spacy.conf"
              force: yes
              backup: yes
              owner: "{{unix_user}}"
              group: "{{unix_group}}"
            when: webservertype == "nginx" and ("all" in services or "spacy"  in services)

          - name: "Install uwsgi configuration for spacy"
            become: "{{lm_become}}"
            become_user: root
            template:
              src: "uwsgi/spacy.ini"
              dest: "{{lm_prefix}}/etc/uwsgi-emperor/vassals/spacy.ini"
              force: yes
              backup: yes
              owner: "{{web_user}}" #permissions need to match the runner
              group: "{{web_group}}"
              mode: u+rw,a+r
            when: '"all" in services or item in services'

          - name: Register spaCy webservice
            include_role:
                name: lamachine-register
            vars:
                update: "{{item}}"
                metadata: #add entrypoint metadata to registry
                    identifier: "{{item}}"
                    entryPoints:
                      - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "WUI", mediatorApplication: "#clamservices" }
                      - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "REST", specification: "{{lm_base_url}}/{{item}}/info",  mediatorApplication: "#clamservices" }
            when: '"all" in services or item in services'
            with_items:
              - spacy




