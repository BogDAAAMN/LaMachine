---

    - when: webserver and ("flat" in services or "all" in services)
      block:
        - name: "Install webserver configuration"
          become: "{{lm_become}}"
          become_user: root
          template:
            src: "nginx/flat.conf"
            dest: "{{lm_prefix}}/etc/nginx/conf.d/flat.conf"
            force: yes
            backup: yes
            owner: "{{unix_user}}"
          when: webservertype == "nginx"

        - name: "Install uwsgi configuration for Flat"
          become: "{{lm_become}}"
          become_user: root
          template:
            src: "uwsgi/flat.ini"
            dest: "{{lm_prefix}}/etc/uwsgi-emperor/vassals/flat.ini"
            force: yes
            backup: yes
            owner: "{{web_user}}"
            group: "{{web_group}}"
            mode: u+rw,a+r

        - name: Create server writable directories for FLAT (global)
          become: "{{lm_become}}"
          become_user: root
          file:
              path: "{{ lm_prefix }}/{{item}}"
              state: directory
              owner: "{{ unix_user }}"
              group: "{{ web_group }}"
              mode: u+rwx,g+rwsx,a+rx
          with_items:
              - "var/www-data/flat.docroot"
              - "var/log/foliadocserve"
          when: root and locality == "global"

        - name: Create server writable directories for FLAT (local)
          file:
              path: "{{ lm_prefix }}/{{item}}"
              state: directory
              mode: u+rwx,g+rwx,a+rx
          with_items:
              - "var/www-data/flat.docroot"
              - "var/log/foliadocserve"
          when: root and locality == "local"

        - name: Installing FLAT settings
          template:
              src: "flat_settings.py"
              dest: "{{lm_prefix}}/etc/flat_settings.py"
              force: yes
              backup: yes
              owner: "{{unix_user}}"
              mode: u+rw,a+r

        - name: Applying migrations
          shell: "PYTHONPATH={{lm_prefix}}/etc DJANGO_SETTINGS_MODULE=flat_settings django-admin migrate --run-syncdb"
          args:
              executable: /bin/bash
              chdir: "{{lm_prefix}}/etc"
          environment: "{{lm_env}}"

        - name: Create FLAT superuser
          shell: |
            export PYTHONPATH="{{lm_prefix}}/etc" DJANGO_SETTINGS_MODULE=flat_settings
            echo -ne "
            from django.contrib.auth.models import User

            username = 'flat'
            password = 'flat'
            email = 'flat@localhost'

            if User.objects.filter(username=username).count() == 0:
            \tUser.objects.create_superuser(username, email, password)
            \tprint('Superuser created.')
            else:
            \tprint('Superuser creation skipped.')
            " | django-admin shell -i python
          args:
              executable: /bin/bash
              chdir: "{{lm_prefix}}/etc"
          environment: "{{lm_env}}"

        - name: Configure FLAT domain
          shell: |
            export PYTHONPATH="{{lm_prefix}}/etc" DJANGO_SETTINGS_MODULE=flat_settings
            echo -ne "

            username = 'flat'
            password = 'flat'
            email = 'flat@localhost'

            from django.contrib.sites.models import Site
            one = Site.objects.all()[0]
            one.domain = '{{hostname}}/flat'
            one.name = 'FLAT'
            one.save()" | django-admin shell -i python
          args:
              executable: /bin/bash
              chdir: "{{lm_prefix}}/etc"
          environment: "{{lm_env}}"
