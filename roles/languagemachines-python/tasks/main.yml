---

    - name: Installing Python packages
      include_role:
        name: lamachine-python-install
      with_items:
          - { github_user: "proycon", github_repo: "pynlpl", pip: "pynlpl", conda: "" }
          - { github_user: "proycon", github_repo: "clam", pip: "clam", conda: "" }
          - { github_user: "proycon", github_repo: "folia", pip: "folia-tools", conda: "" }
          - { github_user: "proycon", github_repo: "foliadocserve", pip: "foliadocserve", conda: "" }
          - { github_user: "proycon", github_repo: "babelpy", pip: "babelpy", conda: "" }
          - { github_user: "proycon", github_repo: "babelente", pip: "babelente", conda: "" }
      loop_control:
           loop_var: package

    - name: Testing Python packages
      include_role:
          name: lamachine-run
      vars:
          command: "python3 -c 'import {{ item }}'"
      with_items:
          - pynlpl
          - pynlpl.formats.folia
      register: test
      changed_when: test.rc != 0

    - name: Testing whether python-based tools start
      include_role:
          name: lamachine-run
      vars:
          command: "{{ item }} -h"
      with_items:
          - foliavalidator
          - clamservice
          - folia2html
          - folia2txt
          - foliaquery
          - babelente
      register: test
      changed_when: test.rc != 0

    - when: webserver
      block:
        - name: Installing FLAT
          include_role:
            name: lamachine-python-install
          vars:
            package:
               github_user: "proycon"
               github_repo: "flat"
               pip: "FoLiA-Linguistic-Annotation-Tool"
        - name: Installing webservices
          include_role:
            name: lamachine-python-install
          vars:
            package:
               github_user: "proycon"
               github_repo: "clamservices"
               pip: "clamservices"
        - name: Link {{item}} installation in {{lm_prefix}}/opt
          shell: |
            export DIR=$(python3 -c "import {{item}}; print({{item}}.__path__[0])")
            ln -sf $DIR {{lm_prefix}}/opt/{{item}}
          with_items:
            - clam
            - clamservices
            - django
            - flat
         - name: Install webserver configuration for clamservices
           become: true
           become_user: root
           template:
             src: clamservices.conf
             dest: /etc/nginx/conf.d/clamservices.conf
             force: yes
             backup: yes
           when: root and locality="global"
         - name: Install webserver configuration for flat
           become: true
           become_user: root
           template:
             src: flat.conf
             dest: /etc/nginx/conf.d/flat.conf
             force: yes
             backup: yes
           when: root and locality="global"



