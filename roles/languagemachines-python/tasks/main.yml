---
    - when: ran_languagemachines_python is not defined
      block:
        - name: "Extra global pip3 test"
          shell: pip3 list
          environment: "{{lm_env}}"
          when: locality == "global"

        - name: Installing Python packages
          include_role:
            name: lamachine-python-install
          with_items:
              - { github_user: "proycon", github_repo: "pynlpl", pip: "pynlpl" }
              - { github_user: "proycon", github_repo: "clam", pip: "clam" }
              - { github_user: "proycon", github_repo: "foliapy", pip: "folia" }
              - { github_user: "proycon", github_repo: "foliatools", pip: "folia-tools" }
              - { github_user: "proycon", github_repo: "foliadocserve", pip: "foliadocserve" }
              - { github_user: "proycon", github_repo: "babelpy", pip: "babelpy" }
              - { github_user: "proycon", github_repo: "babelente", pip: "babelente" }
          loop_control:
               loop_var: package

        - name: Testing Python packages
          include_role:
              name: lamachine-run
          vars:
              command: "python3 -c 'import {{ item }}'"
              allow_failure: "{{ignore_tests|bool}}"
          with_items:
              - pynlpl
              - pynlpl.formats.folia #legacy!
              - folia.main
          ignore_errors: "{{ignore_tests|bool}}"

        - name: Updating metadata for CLARIAH software
          include_role:
            name: lamachine-register
          vars:
            update: "{{item}}"
            metadata:
              identifier: "{{item}}"
              funder:
                - "@type": Organization
                  name: CLARIAH
                  url: https://clariah.nl
          with_items:
            - clam
            - folia-tools

        - name: Updating metadata for BabelEnte
          include_role:
            name: lamachine-register
          vars:
            update: "babelente"
            metadata:
              identifier: babelente
              funder: "TraMOOC"

        - name: Testing whether python-based tools start
          include_role:
              name: lamachine-run
          vars:
              command: "{{ item }} -h"
          with_items:
              - foliavalidator
              - clamservice
              - folia2html
              - folia2txt
              - foliaquery
              - babelente
          ignore_errors: "{{ignore_tests|bool}}"

        - when: webserver|bool
          block:
            - name: Installing FLAT
              include_role:
                name: lamachine-python-install
              vars:
                package:
                   github_user: "proycon"
                   github_repo: "flat"
                   pip: "FoLiA-Linguistic-Annotation-Tool"
                metadata:
                  identifier: "folia-linguistic-annotation-tool"
                  name: "FLAT: FoLiA Linguistic Annotation Tool"
                  entryPoints:
                    - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/flat", interfaceType: "WUI" }
              when: '"all" in services or "flat" in services'

            - name: Registering foliadocserve entrypoint
              include_role:
                name: lamachine-register
              vars:
                update: "foliadocserve"
                package:
                  pip: foliadocserve
                metadata:
                  entryPoints:
                    - "@type": "EntryPoint"
                      urlTemplate: "{{lm_base_url}}/foliadocserve"
                      interfaceType: "WUI"
                    - "@type": "EntryPoint"
                      urlTemplate: "{{lm_base_url}}/foliadocserve"
                      interfaceType: "REST"
              when: '"all" in services or "foliadocserve" in services'

            - name: Installing webservices
              include_role:
                name: lamachine-python-install
              vars:
                package:
                   github_user: "proycon"
                   github_repo: "clamservices"
                   pip: "clamservices"

            - name: Installing piereling
              include_role:
                name: lamachine-python-install
              vars:
                package:
                   github_user: "proycon"
                   github_repo: "piereling"
                   pip: "piereling"

            - name: Register webservices
              include_role:
                  name: lamachine-register
              vars:
                  update: "{{item}}"
                  allow_failure: "yes" #in case the app is not installed
                  metadata: #add entrypoint metadata to registry
                      identifier: "{{item}}"
                      entryPoints:
                        - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "WUI", mediatorApplication: "#clamservices" }
                        - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/{{item}}", interfaceType: "REST", specification: "{{lm_base_url}}/{{item}}/info",  mediatorApplication: "#clamservices" }
              when: '"all" in services or item in services'
              with_items:
                - frog
                - ucto
                - timbl
                - babelente
                - piereling

            - name: Register colibri-core webservice
              include_role:
                  name: lamachine-register
              vars:
                update: "colibri-core"
                allow_failure: "yes" #in case the app is not installed
                metadata: #add entrypoint metadata to registry
                    identifier: "colibri-core"
                    entryPoints:
                      - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/colibricore", interfaceType: "WUI", mediatorApplication: "#clamservices" }
                      - { "@type": "EntryPoint",  urlTemplate: "{{lm_base_url}}/colibricore", interfaceType: "REST", specification: "{{lm_base_url}}/colibricore/info",  mediatorApplication: "#clamservices" }

            - name: Link Python package installation in opt/
              include_role:
                name: lamachine-python-link
              with_items:
                - clam
                - clamservices
                - django
                - flat
                - babelente
                - piereling

            - name: Installing webserver configuration for clamservices
              include_role:
                name: lamachine-web-install
              vars:
                service:
                  nginx: clamservices

            - name: Installing web services
              include_role:
                name: lamachine-web-install
              with_items:
                - { uwsgi: frog, clam: frog }
                - { uwsgi: ucto, clam: ucto }
                - { uwsgi: timbl, clam: timbl }
                - { uwsgi: colibricore, clam: colibricore }
                - { nginx: babelente, uwsgi: babelente, clam: babelente }
                - { nginx: piereling, uwsgi: piereling, clam: piereling }
              loop_control:
                   loop_var: service

              #note: some things like alpino,spacy are deferred to that respective role

            - name: "Install clam configuration"
              become: "{{lm_become}}"
              become_user: root
              template:
                src: "clam/{{item}}.config.yml"
                dest: "{{lm_prefix}}/etc/{{item}}.config.yml"
                force: yes
                backup: yes
                owner: "{{unix_user}}"
                group: "{{unix_group}}"
                mode: u+rw,a+r
              when: '"all" in services or item in services'
              with_items:
                - frog
                - ucto
                - timbl
                - colibricore
                - babelente
                - piereling

            - name: "Setting up FLAT"
              import_tasks: flat.yml
              when: '"all" in services or "flat" in services'

    - set_fact: ran_languagemachines_python=1
